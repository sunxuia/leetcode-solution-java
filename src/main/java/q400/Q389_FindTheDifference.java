package q400;

import org.junit.runner.RunWith;
import util.runner.Answer;
import util.runner.LeetCodeRunner;
import util.runner.TestData;
import util.runner.data.DataExpectation;

/**
 * https://leetcode.com/problems/find-the-difference/
 *
 * Given two strings s and t which consist of only lowercase letters.
 *
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 *
 * Find the letter that was added in t.
 *
 * Example:
 *
 * Input:
 * s = "abcd"
 * t = "abcde"
 *
 * Output:
 * e
 *
 * Explanation:
 * 'e' is the letter that was added.
 */
@RunWith(LeetCodeRunner.class)
public class Q389_FindTheDifference {

    @Answer
    public char findTheDifference(String s, String t) {
        int[] count = new int[26];
        for (int i = 0; i < s.length(); i++) {
            ++count[s.charAt(i) - 'a'];
        }
        for (int i = 0; i < t.length(); i++) {
            if (--count[t.charAt(i) - 'a'] == -1) {
                return t.charAt(i);
            }
        }
        return 0;
    }

    /**
     * LeetCode 上最快的做法. 用到了异或运算.
     * 类似 {@link q150.Q136_SingleNumber} 中的做法
     */
    @Answer
    public char findTheDifference2(String s, String t) {
        char sum = t.charAt(t.length() - 1);
        for (int i = 0; i < s.length(); i++) {
            sum ^= s.charAt(i);
            sum ^= t.charAt(i);
        }
        return sum;
    }

    @TestData
    public DataExpectation example = DataExpectation
            .createWith("abcd", "abcde").expect('e');

}
